import React, { Component } from 'react';
import PropTypes from 'prop-types';
import ListItem from '@material-ui/core/ListItem';
import List from '@material-ui/icons/List';
import IconButton from '@material-ui/core/IconButton';
import ActionDelete from '@material-ui/icons/Delete';
import FileFileDownload from '@material-ui/icons/FileDownload';
import FileCloud from '@material-ui/icons/CloudDownload';
import Collapse from '@material-ui/core/Collapse';
import './style.css';

const DrawerMenuItem = ({
  tile,
  onTileClick,
  onDeleteTile,
  onDownloadTile,
  path,
  tileIndex
}) =>  {
  if (typeof (tile) === typeof ({})  && !tile.url) {   // labels, drop down to expand
    return (
      <ListItem
        innerDivStyle={{  border: '1px solid rgb(20,20,20)' }}
        key={path}
        primaryTogglesNestedList
      >
          {tile.label}
          {!tile.children ? [] : tile.children.map((value, tileIndex) => (
              <DrawerMenuItem
                  onTileClick={onTileClick}
                  onDeleteTile={onDeleteTile}
                  onDownloadTile={onDownloadTile}
                  tile={value}
                  tileIndex={tileIndex}
                  path={`${path}/${tileIndex}`}
              >
                  {tile.label} this is list
                  <Collapse in={false} timeout="auto" unmountOnExit>
                      <List>
                          <ListItem>hello</ListItem>
                      </List>
                  </Collapse>
              </DrawerMenuItem>
          ))}
      </ListItem>
    );
  }else if (typeof(tile) === typeof({}) && tile.url){   // custom tiles
    return (
      <ListItem
        style={{ paddingLeft: 28 }}
        innerDivStyle={{ display: 'flex' }}
        hoverColor={'rgba(40,40,210,0.8)'}
        key={path}
        primaryText={(
          <div>
            {tile.name}
            <IconButton
              onClick={event => {
                event.stopPropagation();
                onDeleteTile(tile);
              }}
              style={{ position: 'absolute', right: 12, top: -2 }}
              hoveredStyle={{ background: 'black', border: 'blue' }}
            >
              <ActionDelete />
            </IconButton>
            <IconButton
              onClick={event => {
                event.stopPropagation();
                onDownloadTile(tile);
              }}
              style={{ position: 'absolute', right: 64, top: -2 }}
              hoveredStyle={{ background: 'black', border: 'blue' }}
            >
              <FileFileDownload  />
            </IconButton>
            <IconButton
              onClick={event => {
                event.stopPropagation();
              }}
              style={{ position: 'absolute', right: 116, top: -2 }}
              hoveredStyle={{ background: 'black', border: 'blue' }}
            >
              <FileCloud />
            </IconButton>
          </div>
        )}
        onClick={() => {
          onTileClick(tile, tile.url);
        }}
      />
    )
  }
  return (    // regular tiles
    <ListItem
      className="drawer_menu_item_base"
      key={path}
      onClick={() => {
        onTileClick(tile);
      }}
   >
        tile
    </ListItem>
  );
};

DrawerMenuItem.propTypes = {
  tile: PropTypes.object,
  onTileClick: PropTypes.func,
  onDeleteTile: PropTypes.func,   // only for custom tiles
  onDownloadTile: PropTypes.func, // only for custom tiles
  path: PropTypes.string,
  tileIndex: PropTypes.string,
};

export default DrawerMenuItem;

